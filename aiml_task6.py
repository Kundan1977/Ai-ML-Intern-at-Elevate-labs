# -*- coding: utf-8 -*-
"""AiML_task6.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/168Z13uCR8JYrxOzoAMM7GFslpyBeK58q
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.datasets import load_iris
from sklearn.preprocessing import StandardScaler
from sklearn.model_selection import train_test_split
from sklearn.neighbors import KNeighborsClassifier
from matplotlib.colors import ListedColormap
from sklearn.metrics import accuracy_score, confusion_matrix, classification_report

df = pd.read_csv('/content/Iris.csv')
df.head()

# Split the Data

x = df.drop('Species', axis=1)
y = df['Species']

# Normalize the Features

scaler = StandardScaler()
x_scaled = scaler.fit_transform(x)

# Train Test Split

x_train, x_test, y_train, y_test = train_test_split(
    x_scaled, y, test_size=0.2, random_state=30
)

# Train KNN model

k_values = range(1, 10)
accuracies = []

for i in k_values:
    knn = KNeighborsClassifier(n_neighbors=i)
    knn.fit(x_train, y_train)
    y_pred = knn.predict(x_test)
    acc = accuracy_score(y_test, y_pred)
    accuracies.append(acc)

plt.plot(k_values, accuracies, marker='o')
plt.xlabel('K Value')
plt.ylabel('Accuracy')
plt.title('K vs Accuracy')
plt.show()

# Final Model

best_k = k_values[np.argmax(accuracies)]
knn = KNeighborsClassifier(n_neighbors=best_k)
knn.fit(x_train, y_train)
y_pred = knn.predict(x_test)

print("Best K:", best_k)
print("Accuracy:", accuracy_score(y_test, y_pred) * 100)
print("Confusion Matrix:\n", confusion_matrix(y_test, y_pred))
print("Classification Report:\n", classification_report(y_test, y_pred))