# -*- coding: utf-8 -*-
"""Ai/ML_task3.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1lCquuwmBy85H-Pt59cjq_5Z0mQopODg9
"""

# Import Libraries

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_absolute_error, mean_squared_error, r2_score

# load the data

df = pd.read_csv('/content/Housing.csv')
df.head()

# Check nulls

print(df.isnull().sum())

#encode categorical variables

df = pd.get_dummies(df, drop_first=True)

# Features & target

X = df.drop('price', axis=1)  # for training remove 1 price colms
Y = df['price'] # for testing part price

# Split into train and test

X_train, X_test, Y_train, Y_test = train_test_split(
    X, Y, test_size=0.2, random_state=42
)

# fit linear regression model

model = LinearRegression()
model.fit(X_train, Y_train)

# Coefficients
print("Intercept:", model.intercept_)
coeff_df = pd.DataFrame(model.coef_, X.columns, columns=['Coefficient'])
print(coeff_df)

# make Predictions and evaluate

Y_pred = model.predict(X_test)

mae = mean_absolute_error(Y_test, Y_pred)
mse = mean_squared_error(Y_test, Y_pred)
r2  = r2_score(Y_test, Y_pred)

print(f"MAE: {mae}")
print(f"MSE: {mse}")
print(f"RÂ² : {r2}")

# Plot regression line for price Vs area

plt.scatter(X_test['area'], Y_test, color='red', label='Actual')
plt.plot(X_test['area'], Y_pred, color='yellow', linewidth=2, label='Predicted')
plt.xlabel('Area')
plt.ylabel('Price')
plt.title('Linear Regression')
plt.legend()
plt.show()